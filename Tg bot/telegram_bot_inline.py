import telebot
from environs import Env
from telebot import types
from random import *
import alhimi

db = alhimi.Database()

env = Env()
env.read_env()
token = env('TOKEN')

bot = telebot.TeleBot(token)

start_keyboard = {
    'üõí –ú–∞–≥–∞–∑–∏–Ω' : 'shop',
    'üí≥  –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å' : 'balance',
    'üõ†Ô∏è –ê–¥–º–∏–Ω–∫–∞' : 'admin',
}

def inline_keyboards_create(dictionary : dict, NumberColumns=1):
    keyboards = types.InlineKeyboardMarkup(row_width=NumberColumns)
    btn_names = [types.InlineKeyboardButton(text=key, callback_data=value) for key, value in dictionary.items()]
    keyboards.add(*btn_names)
    return keyboards

@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.from_user.id
    user_name = message.from_user.username
    if db.get_user(user_id):
        bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –Ø –±–æ—Ç –ú–∞—Å—è–Ω—è".format(message.from_user), reply_markup=inline_keyboards_create(start_keyboard))
    else:
        db.register(str(user_id), user_name)
        bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –ü—Ä–∏–≤–µ—Ç {0.first_name}! –Ø –±–æ—Ç –ú–∞—Å—è–Ω—è".format(message.from_user), reply_markup=inline_keyboards_create(start_keyboard))
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    aas1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
    aas2 = types.KeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
    aas4 = types.KeyboardButton("/shop")
    markup.add(aas1, aas2, aas4)



@bot.callback_query_handler(func=lambda call: True)
def handle_callback_query(call):
    callback_data = call.data
    if callback_data == 'balance':
        balance_get(call)
    elif callback_data == 'admin':
        admin_get(call)
    elif callback_data == 'add_product':
        product_get(call)
    elif callback_data == 'shop':
        shop(call)

def shop(call):
    products = db.get_all_products()
    if products:
        product_dict = {f'{product.name} - {product.price} ‚ÇΩ': product.id for product in products}
        bot.send_message(chat_id=call.message.chat.id,
                         text=f"–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤:", reply_markup=inline_keyboards_create(product_dict))
    
            
    else:
        bot.send_message(chat_id=call.message.chat.id,
                         text="–í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤.")

def balance_get(call):
    msg = bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
        text="–ù–∞ –∫–∞–∫—É—é —Å—É–º–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å?")    
    bot.register_next_step_handler(msg, update_bln)

def update_bln(message):
    balance = message.text
    user_id = message.from_user.id
    result = db.update_balance(user_id, balance, True)
    bot.send_message(message.chat.id, f"–í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ {balance}, —Ç–µ–ø–µ—Ä—å —É –≤–∞—Å {result}", reply_markup=inline_keyboards_create(start_keyboard))

def admin_get(call):
    bot.send_message(chat_id=call.message.chat.id,
                     text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                     reply_markup=inline_keyboards_create({'–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä': 'add_product'}))

def product_get(call):
    bot.send_message(chat_id=call.message.chat.id,
                     text="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞:")
    bot.register_next_step_handler(call.message, name_product)

def name_product(message):
    name = message.text
    bot.send_message(chat_id=message.chat.id,
                     text="–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞:")
    bot.register_next_step_handler(message, price_product, name)

def price_product(message, name):
    price = message.text
    db.add_product(name=name, price=price)
    bot.send_message(chat_id=message.chat.id,
                     text="–£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!")    

@bot.message_handler(content_types=['text'])
def func(message):
    if(message.text == "üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è"):
        bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ–µ—Ç..)")
    elif(message.text == "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        aas1 = types.KeyboardButton("–ö–∞–∫ –º–µ–Ω—è –∑–æ–≤—É—Ç?")
        aas2 = types.KeyboardButton("–ß—Ç–æ —è –º–æ–≥—É?")
        back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(aas1, aas2, back)
        bot.send_message(message.chat.id, text="–ó–∞–¥–∞–π –º–Ω–µ –≤–æ–ø—Ä–æ—Å", reply_markup=markup)
    
    elif(message.text == "–ö–∞–∫ –º–µ–Ω—è –∑–æ–≤—É—Ç?"):
        bot.send_message(message.chat.id, "–ú–µ–Ω—è –∑–æ–≤—É—Ç –ú–∞—Å—è–Ω—è.")
    
    elif message.text == "–ß—Ç–æ —è –º–æ–≥—É?":
        bot.send_message(message.chat.id, text="–ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è —Å —á–∏—Ç–∞—Ç–µ–ª—è–º–∏")
    
    elif (message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        aas1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
        aas2 = types.KeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
        aas4 = types.KeyboardButton("/shop")
        markup.add(aas1, aas2, aas4)
        bot.send_message(message.chat.id, text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup)

bot.polling(none_stop=True)